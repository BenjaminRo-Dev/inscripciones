services:
  laravel.inscripciones:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-inscripciones
    ports:
      - "84:80"
    volumes:
      - .:/var/www/html
    env_file:
      - .env
    environment:
      # DB
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-benjamin}
      DB_PASSWORD: ${DB_PASSWORD:-03091542}

      # Redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      CACHE_STORE: ${CACHE_STORE:-redis}

      # RabbitMQ
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST:-/}

    depends_on:
      # - postgres
      - redis
      - rabbitmq
    # command: php artisan queue:listen #nota, esto no funciona, usar supervisord, mientras hacerlo manual
    # command: >
    #   sh -c "composer install && php artisan key:generate && php artisan serve --host=0.0.0.0 --port=80"
    command: >
      sh -c "composer install &&
            php artisan key:generate &&
            supervisord -c /var/www/html/mi_config/supervisord.conf"

    networks:
      - microservicios-topicos

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # healthcheck:
    #   test: ["CMD", "redis-cli", "ping"]
    #   retries: 3
    #   timeout: 5s
    networks:
      - microservicios-topicos

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name: php-redisadmin
    ports:
      - "91:80"
    environment:
      REDIS_1_HOST: ${REDIS_HOST:-redis}
      REDIS_1_PORT: ${REDIS_PORT:-6379}
    depends_on:
      - redis
    networks:
      - microservicios-topicos

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    # healthcheck:
    #   test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
    #   retries: 3
    #   timeout: 5s
    networks:
      - microservicios-topicos

volumes:
  redis_data:
  rabbitmq_data:

networks:
  microservicios-topicos:
    external: true
